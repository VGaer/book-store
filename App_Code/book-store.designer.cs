#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Data.Linq;
using System.Data.Linq.Mapping;
using System.Linq;
using System.Linq.Expressions;
using System.Reflection;



[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="book-store")]
public partial class book_storeDataContext : System.Data.Linq.DataContext
{
	
	private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
	
  #region 可扩展性方法定义
  partial void OnCreated();
  partial void InsertAccount(Account instance);
  partial void UpdateAccount(Account instance);
  partial void DeleteAccount(Account instance);
  partial void InsertAdmin(Admin instance);
  partial void UpdateAdmin(Admin instance);
  partial void DeleteAdmin(Admin instance);
  partial void InsertBook(Book instance);
  partial void UpdateBook(Book instance);
  partial void DeleteBook(Book instance);
  partial void InsertCategory(Category instance);
  partial void UpdateCategory(Category instance);
  partial void DeleteCategory(Category instance);
  partial void InsertComment(Comment instance);
  partial void UpdateComment(Comment instance);
  partial void DeleteComment(Comment instance);
  partial void InsertDeliveryAddress(DeliveryAddress instance);
  partial void UpdateDeliveryAddress(DeliveryAddress instance);
  partial void DeleteDeliveryAddress(DeliveryAddress instance);
  partial void InsertShopCart(ShopCart instance);
  partial void UpdateShopCart(ShopCart instance);
  partial void DeleteShopCart(ShopCart instance);
  partial void InsertOrderDetail(OrderDetail instance);
  partial void UpdateOrderDetail(OrderDetail instance);
  partial void DeleteOrderDetail(OrderDetail instance);
  partial void InsertOrder(Order instance);
  partial void UpdateOrder(Order instance);
  partial void DeleteOrder(Order instance);
  #endregion
	
	public book_storeDataContext() : 
			base(global::System.Configuration.ConfigurationManager.ConnectionStrings["book_storeConnectionString3"].ConnectionString, mappingSource)
	{
		OnCreated();
	}
	
	public book_storeDataContext(string connection) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public book_storeDataContext(System.Data.IDbConnection connection) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public book_storeDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public book_storeDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public System.Data.Linq.Table<Account> Account
	{
		get
		{
			return this.GetTable<Account>();
		}
	}
	
	public System.Data.Linq.Table<Admin> Admin
	{
		get
		{
			return this.GetTable<Admin>();
		}
	}
	
	public System.Data.Linq.Table<Book> Book
	{
		get
		{
			return this.GetTable<Book>();
		}
	}
	
	public System.Data.Linq.Table<Category> Category
	{
		get
		{
			return this.GetTable<Category>();
		}
	}
	
	public System.Data.Linq.Table<Comment> Comment
	{
		get
		{
			return this.GetTable<Comment>();
		}
	}
	
	public System.Data.Linq.Table<DeliveryAddress> DeliveryAddress
	{
		get
		{
			return this.GetTable<DeliveryAddress>();
		}
	}
	
	public System.Data.Linq.Table<ShopCart> ShopCart
	{
		get
		{
			return this.GetTable<ShopCart>();
		}
	}
	
	public System.Data.Linq.Table<OrderDetail> OrderDetail
	{
		get
		{
			return this.GetTable<OrderDetail>();
		}
	}
	
	public System.Data.Linq.Table<Order> Order
	{
		get
		{
			return this.GetTable<Order>();
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Account")]
public partial class Account : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private string _UserName;
	
	private string _Password;
	
	private string _Telephone;
	
	private int _Id;
	
	private EntitySet<Comment> _Comment;
	
	private EntitySet<DeliveryAddress> _DeliveryAddress;
	
	private EntitySet<ShopCart> _ShopCart;
	
	private EntitySet<Order> _Order;
	
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserNameChanging(string value);
    partial void OnUserNameChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnTelephoneChanging(string value);
    partial void OnTelephoneChanged();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    #endregion
	
	public Account()
	{
		this._Comment = new EntitySet<Comment>(new Action<Comment>(this.attach_Comment), new Action<Comment>(this.detach_Comment));
		this._DeliveryAddress = new EntitySet<DeliveryAddress>(new Action<DeliveryAddress>(this.attach_DeliveryAddress), new Action<DeliveryAddress>(this.detach_DeliveryAddress));
		this._ShopCart = new EntitySet<ShopCart>(new Action<ShopCart>(this.attach_ShopCart), new Action<ShopCart>(this.detach_ShopCart));
		this._Order = new EntitySet<Order>(new Action<Order>(this.attach_Order), new Action<Order>(this.detach_Order));
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
	public string UserName
	{
		get
		{
			return this._UserName;
		}
		set
		{
			if ((this._UserName != value))
			{
				this.OnUserNameChanging(value);
				this.SendPropertyChanging();
				this._UserName = value;
				this.SendPropertyChanged("UserName");
				this.OnUserNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
	public string Password
	{
		get
		{
			return this._Password;
		}
		set
		{
			if ((this._Password != value))
			{
				this.OnPasswordChanging(value);
				this.SendPropertyChanging();
				this._Password = value;
				this.SendPropertyChanged("Password");
				this.OnPasswordChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Telephone", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
	public string Telephone
	{
		get
		{
			return this._Telephone;
		}
		set
		{
			if ((this._Telephone != value))
			{
				this.OnTelephoneChanging(value);
				this.SendPropertyChanging();
				this._Telephone = value;
				this.SendPropertyChanged("Telephone");
				this.OnTelephoneChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.Always, DbType="Int NOT NULL IDENTITY", IsDbGenerated=true)]
	public int Id
	{
		get
		{
			return this._Id;
		}
		set
		{
			if ((this._Id != value))
			{
				this.OnIdChanging(value);
				this.SendPropertyChanging();
				this._Id = value;
				this.SendPropertyChanged("Id");
				this.OnIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Account_Comment", Storage="_Comment", ThisKey="UserName", OtherKey="UserName")]
	public EntitySet<Comment> Comment
	{
		get
		{
			return this._Comment;
		}
		set
		{
			this._Comment.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Account_DeliveryAddress", Storage="_DeliveryAddress", ThisKey="UserName", OtherKey="UserName")]
	public EntitySet<DeliveryAddress> DeliveryAddress
	{
		get
		{
			return this._DeliveryAddress;
		}
		set
		{
			this._DeliveryAddress.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Account_ShopCart", Storage="_ShopCart", ThisKey="UserName", OtherKey="UserName")]
	public EntitySet<ShopCart> ShopCart
	{
		get
		{
			return this._ShopCart;
		}
		set
		{
			this._ShopCart.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Account_Order", Storage="_Order", ThisKey="UserName", OtherKey="UserName")]
	public EntitySet<Order> Order
	{
		get
		{
			return this._Order;
		}
		set
		{
			this._Order.Assign(value);
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_Comment(Comment entity)
	{
		this.SendPropertyChanging();
		entity.Account = this;
	}
	
	private void detach_Comment(Comment entity)
	{
		this.SendPropertyChanging();
		entity.Account = null;
	}
	
	private void attach_DeliveryAddress(DeliveryAddress entity)
	{
		this.SendPropertyChanging();
		entity.Account = this;
	}
	
	private void detach_DeliveryAddress(DeliveryAddress entity)
	{
		this.SendPropertyChanging();
		entity.Account = null;
	}
	
	private void attach_ShopCart(ShopCart entity)
	{
		this.SendPropertyChanging();
		entity.Account = this;
	}
	
	private void detach_ShopCart(ShopCart entity)
	{
		this.SendPropertyChanging();
		entity.Account = null;
	}
	
	private void attach_Order(Order entity)
	{
		this.SendPropertyChanging();
		entity.Account = this;
	}
	
	private void detach_Order(Order entity)
	{
		this.SendPropertyChanging();
		entity.Account = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Admin")]
public partial class Admin : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private string _UserName;
	
	private string _Password;
	
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserNameChanging(string value);
    partial void OnUserNameChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    #endregion
	
	public Admin()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
	public string UserName
	{
		get
		{
			return this._UserName;
		}
		set
		{
			if ((this._UserName != value))
			{
				this.OnUserNameChanging(value);
				this.SendPropertyChanging();
				this._UserName = value;
				this.SendPropertyChanged("UserName");
				this.OnUserNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
	public string Password
	{
		get
		{
			return this._Password;
		}
		set
		{
			if ((this._Password != value))
			{
				this.OnPasswordChanging(value);
				this.SendPropertyChanging();
				this._Password = value;
				this.SendPropertyChanged("Password");
				this.OnPasswordChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Book")]
public partial class Book : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private string _Name;
	
	private decimal _Price;
	
	private string _Author;
	
	private string _Publisher;
	
	private System.DateTime _PbTime;
	
	private string _BriefIntro;
	
	private string _PicIntro;
	
	private int _Id;
	
	private int _Sales;
	
	private int _Stock;
	
	private string _CategoryName;
	
	private string _BookPic;
	
	private EntitySet<Comment> _Comment;
	
	private EntitySet<ShopCart> _ShopCart;
	
	private EntitySet<OrderDetail> _OrderDetail;
	
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnPriceChanging(decimal value);
    partial void OnPriceChanged();
    partial void OnAuthorChanging(string value);
    partial void OnAuthorChanged();
    partial void OnPublisherChanging(string value);
    partial void OnPublisherChanged();
    partial void OnPbTimeChanging(System.DateTime value);
    partial void OnPbTimeChanged();
    partial void OnBriefIntroChanging(string value);
    partial void OnBriefIntroChanged();
    partial void OnPicIntroChanging(string value);
    partial void OnPicIntroChanged();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnSalesChanging(int value);
    partial void OnSalesChanged();
    partial void OnStockChanging(int value);
    partial void OnStockChanged();
    partial void OnCategoryNameChanging(string value);
    partial void OnCategoryNameChanged();
    partial void OnBookPicChanging(string value);
    partial void OnBookPicChanged();
    #endregion
	
	public Book()
	{
		this._Comment = new EntitySet<Comment>(new Action<Comment>(this.attach_Comment), new Action<Comment>(this.detach_Comment));
		this._ShopCart = new EntitySet<ShopCart>(new Action<ShopCart>(this.attach_ShopCart), new Action<ShopCart>(this.detach_ShopCart));
		this._OrderDetail = new EntitySet<OrderDetail>(new Action<OrderDetail>(this.attach_OrderDetail), new Action<OrderDetail>(this.detach_OrderDetail));
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
	public string Name
	{
		get
		{
			return this._Name;
		}
		set
		{
			if ((this._Name != value))
			{
				this.OnNameChanging(value);
				this.SendPropertyChanging();
				this._Name = value;
				this.SendPropertyChanged("Name");
				this.OnNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Price", DbType="Decimal(18,2) NOT NULL")]
	public decimal Price
	{
		get
		{
			return this._Price;
		}
		set
		{
			if ((this._Price != value))
			{
				this.OnPriceChanging(value);
				this.SendPropertyChanging();
				this._Price = value;
				this.SendPropertyChanged("Price");
				this.OnPriceChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Author", DbType="NVarChar(25) NOT NULL", CanBeNull=false)]
	public string Author
	{
		get
		{
			return this._Author;
		}
		set
		{
			if ((this._Author != value))
			{
				this.OnAuthorChanging(value);
				this.SendPropertyChanging();
				this._Author = value;
				this.SendPropertyChanged("Author");
				this.OnAuthorChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Publisher", DbType="NVarChar(35) NOT NULL", CanBeNull=false)]
	public string Publisher
	{
		get
		{
			return this._Publisher;
		}
		set
		{
			if ((this._Publisher != value))
			{
				this.OnPublisherChanging(value);
				this.SendPropertyChanging();
				this._Publisher = value;
				this.SendPropertyChanged("Publisher");
				this.OnPublisherChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PbTime", DbType="Date NOT NULL")]
	public System.DateTime PbTime
	{
		get
		{
			return this._PbTime;
		}
		set
		{
			if ((this._PbTime != value))
			{
				this.OnPbTimeChanging(value);
				this.SendPropertyChanging();
				this._PbTime = value;
				this.SendPropertyChanged("PbTime");
				this.OnPbTimeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BriefIntro", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
	public string BriefIntro
	{
		get
		{
			return this._BriefIntro;
		}
		set
		{
			if ((this._BriefIntro != value))
			{
				this.OnBriefIntroChanging(value);
				this.SendPropertyChanging();
				this._BriefIntro = value;
				this.SendPropertyChanged("BriefIntro");
				this.OnBriefIntroChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PicIntro", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
	public string PicIntro
	{
		get
		{
			return this._PicIntro;
		}
		set
		{
			if ((this._PicIntro != value))
			{
				this.OnPicIntroChanging(value);
				this.SendPropertyChanging();
				this._PicIntro = value;
				this.SendPropertyChanged("PicIntro");
				this.OnPicIntroChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int Id
	{
		get
		{
			return this._Id;
		}
		set
		{
			if ((this._Id != value))
			{
				this.OnIdChanging(value);
				this.SendPropertyChanging();
				this._Id = value;
				this.SendPropertyChanged("Id");
				this.OnIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sales", DbType="Int NOT NULL")]
	public int Sales
	{
		get
		{
			return this._Sales;
		}
		set
		{
			if ((this._Sales != value))
			{
				this.OnSalesChanging(value);
				this.SendPropertyChanging();
				this._Sales = value;
				this.SendPropertyChanged("Sales");
				this.OnSalesChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Stock", DbType="Int NOT NULL")]
	public int Stock
	{
		get
		{
			return this._Stock;
		}
		set
		{
			if ((this._Stock != value))
			{
				this.OnStockChanging(value);
				this.SendPropertyChanging();
				this._Stock = value;
				this.SendPropertyChanged("Stock");
				this.OnStockChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CategoryName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
	public string CategoryName
	{
		get
		{
			return this._CategoryName;
		}
		set
		{
			if ((this._CategoryName != value))
			{
				this.OnCategoryNameChanging(value);
				this.SendPropertyChanging();
				this._CategoryName = value;
				this.SendPropertyChanged("CategoryName");
				this.OnCategoryNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BookPic", DbType="NVarChar(50)")]
	public string BookPic
	{
		get
		{
			return this._BookPic;
		}
		set
		{
			if ((this._BookPic != value))
			{
				this.OnBookPicChanging(value);
				this.SendPropertyChanging();
				this._BookPic = value;
				this.SendPropertyChanged("BookPic");
				this.OnBookPicChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Book_Comment", Storage="_Comment", ThisKey="Id", OtherKey="BookId")]
	public EntitySet<Comment> Comment
	{
		get
		{
			return this._Comment;
		}
		set
		{
			this._Comment.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Book_ShopCart", Storage="_ShopCart", ThisKey="Id", OtherKey="BookId")]
	public EntitySet<ShopCart> ShopCart
	{
		get
		{
			return this._ShopCart;
		}
		set
		{
			this._ShopCart.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Book_OrderDetail", Storage="_OrderDetail", ThisKey="Id", OtherKey="BookId")]
	public EntitySet<OrderDetail> OrderDetail
	{
		get
		{
			return this._OrderDetail;
		}
		set
		{
			this._OrderDetail.Assign(value);
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_Comment(Comment entity)
	{
		this.SendPropertyChanging();
		entity.Book = this;
	}
	
	private void detach_Comment(Comment entity)
	{
		this.SendPropertyChanging();
		entity.Book = null;
	}
	
	private void attach_ShopCart(ShopCart entity)
	{
		this.SendPropertyChanging();
		entity.Book = this;
	}
	
	private void detach_ShopCart(ShopCart entity)
	{
		this.SendPropertyChanging();
		entity.Book = null;
	}
	
	private void attach_OrderDetail(OrderDetail entity)
	{
		this.SendPropertyChanging();
		entity.Book = this;
	}
	
	private void detach_OrderDetail(OrderDetail entity)
	{
		this.SendPropertyChanging();
		entity.Book = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Category")]
public partial class Category : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _Id;
	
	private string _CategoryName;
	
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnCategoryNameChanging(string value);
    partial void OnCategoryNameChanged();
    #endregion
	
	public Category()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int Id
	{
		get
		{
			return this._Id;
		}
		set
		{
			if ((this._Id != value))
			{
				this.OnIdChanging(value);
				this.SendPropertyChanging();
				this._Id = value;
				this.SendPropertyChanged("Id");
				this.OnIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CategoryName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
	public string CategoryName
	{
		get
		{
			return this._CategoryName;
		}
		set
		{
			if ((this._CategoryName != value))
			{
				this.OnCategoryNameChanging(value);
				this.SendPropertyChanging();
				this._CategoryName = value;
				this.SendPropertyChanged("CategoryName");
				this.OnCategoryNameChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Comment")]
public partial class Comment : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _Id;
	
	private int _BookId;
	
	private string _Content;
	
	private System.DateTime _Time;
	
	private string _UserName;
	
	private EntityRef<Book> _Book;
	
	private EntityRef<Account> _Account;
	
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnBookIdChanging(int value);
    partial void OnBookIdChanged();
    partial void OnContentChanging(string value);
    partial void OnContentChanged();
    partial void OnTimeChanging(System.DateTime value);
    partial void OnTimeChanged();
    partial void OnUserNameChanging(string value);
    partial void OnUserNameChanged();
    #endregion
	
	public Comment()
	{
		this._Book = default(EntityRef<Book>);
		this._Account = default(EntityRef<Account>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int Id
	{
		get
		{
			return this._Id;
		}
		set
		{
			if ((this._Id != value))
			{
				this.OnIdChanging(value);
				this.SendPropertyChanging();
				this._Id = value;
				this.SendPropertyChanged("Id");
				this.OnIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BookId", DbType="Int NOT NULL")]
	public int BookId
	{
		get
		{
			return this._BookId;
		}
		set
		{
			if ((this._BookId != value))
			{
				if (this._Book.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnBookIdChanging(value);
				this.SendPropertyChanging();
				this._BookId = value;
				this.SendPropertyChanged("BookId");
				this.OnBookIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Content", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
	public string Content
	{
		get
		{
			return this._Content;
		}
		set
		{
			if ((this._Content != value))
			{
				this.OnContentChanging(value);
				this.SendPropertyChanging();
				this._Content = value;
				this.SendPropertyChanged("Content");
				this.OnContentChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Time", DbType="Date NOT NULL")]
	public System.DateTime Time
	{
		get
		{
			return this._Time;
		}
		set
		{
			if ((this._Time != value))
			{
				this.OnTimeChanging(value);
				this.SendPropertyChanging();
				this._Time = value;
				this.SendPropertyChanged("Time");
				this.OnTimeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
	public string UserName
	{
		get
		{
			return this._UserName;
		}
		set
		{
			if ((this._UserName != value))
			{
				if (this._Account.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnUserNameChanging(value);
				this.SendPropertyChanging();
				this._UserName = value;
				this.SendPropertyChanged("UserName");
				this.OnUserNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Book_Comment", Storage="_Book", ThisKey="BookId", OtherKey="Id", IsForeignKey=true)]
	public Book Book
	{
		get
		{
			return this._Book.Entity;
		}
		set
		{
			Book previousValue = this._Book.Entity;
			if (((previousValue != value) 
						|| (this._Book.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Book.Entity = null;
					previousValue.Comment.Remove(this);
				}
				this._Book.Entity = value;
				if ((value != null))
				{
					value.Comment.Add(this);
					this._BookId = value.Id;
				}
				else
				{
					this._BookId = default(int);
				}
				this.SendPropertyChanged("Book");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Account_Comment", Storage="_Account", ThisKey="UserName", OtherKey="UserName", IsForeignKey=true)]
	public Account Account
	{
		get
		{
			return this._Account.Entity;
		}
		set
		{
			Account previousValue = this._Account.Entity;
			if (((previousValue != value) 
						|| (this._Account.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Account.Entity = null;
					previousValue.Comment.Remove(this);
				}
				this._Account.Entity = value;
				if ((value != null))
				{
					value.Comment.Add(this);
					this._UserName = value.UserName;
				}
				else
				{
					this._UserName = default(string);
				}
				this.SendPropertyChanged("Account");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DeliveryAddress")]
public partial class DeliveryAddress : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _Id;
	
	private string _UserName;
	
	private string _Receiver;
	
	private string _Address;
	
	private string _Zipcode;
	
	private string _Telephone;
	
	private EntityRef<Account> _Account;
	
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnUserNameChanging(string value);
    partial void OnUserNameChanged();
    partial void OnReceiverChanging(string value);
    partial void OnReceiverChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnZipcodeChanging(string value);
    partial void OnZipcodeChanged();
    partial void OnTelephoneChanging(string value);
    partial void OnTelephoneChanged();
    #endregion
	
	public DeliveryAddress()
	{
		this._Account = default(EntityRef<Account>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int Id
	{
		get
		{
			return this._Id;
		}
		set
		{
			if ((this._Id != value))
			{
				this.OnIdChanging(value);
				this.SendPropertyChanging();
				this._Id = value;
				this.SendPropertyChanged("Id");
				this.OnIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
	public string UserName
	{
		get
		{
			return this._UserName;
		}
		set
		{
			if ((this._UserName != value))
			{
				if (this._Account.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnUserNameChanging(value);
				this.SendPropertyChanging();
				this._UserName = value;
				this.SendPropertyChanged("UserName");
				this.OnUserNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Receiver", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
	public string Receiver
	{
		get
		{
			return this._Receiver;
		}
		set
		{
			if ((this._Receiver != value))
			{
				this.OnReceiverChanging(value);
				this.SendPropertyChanging();
				this._Receiver = value;
				this.SendPropertyChanged("Receiver");
				this.OnReceiverChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
	public string Address
	{
		get
		{
			return this._Address;
		}
		set
		{
			if ((this._Address != value))
			{
				this.OnAddressChanging(value);
				this.SendPropertyChanging();
				this._Address = value;
				this.SendPropertyChanged("Address");
				this.OnAddressChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Zipcode", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
	public string Zipcode
	{
		get
		{
			return this._Zipcode;
		}
		set
		{
			if ((this._Zipcode != value))
			{
				this.OnZipcodeChanging(value);
				this.SendPropertyChanging();
				this._Zipcode = value;
				this.SendPropertyChanged("Zipcode");
				this.OnZipcodeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Telephone", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
	public string Telephone
	{
		get
		{
			return this._Telephone;
		}
		set
		{
			if ((this._Telephone != value))
			{
				this.OnTelephoneChanging(value);
				this.SendPropertyChanging();
				this._Telephone = value;
				this.SendPropertyChanged("Telephone");
				this.OnTelephoneChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Account_DeliveryAddress", Storage="_Account", ThisKey="UserName", OtherKey="UserName", IsForeignKey=true)]
	public Account Account
	{
		get
		{
			return this._Account.Entity;
		}
		set
		{
			Account previousValue = this._Account.Entity;
			if (((previousValue != value) 
						|| (this._Account.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Account.Entity = null;
					previousValue.DeliveryAddress.Remove(this);
				}
				this._Account.Entity = value;
				if ((value != null))
				{
					value.DeliveryAddress.Add(this);
					this._UserName = value.UserName;
				}
				else
				{
					this._UserName = default(string);
				}
				this.SendPropertyChanged("Account");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ShopCart")]
public partial class ShopCart : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private string _UserName;
	
	private int _BookId;
	
	private int _Id;
	
	private int _Amount;
	
	private EntityRef<Book> _Book;
	
	private EntityRef<Account> _Account;
	
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserNameChanging(string value);
    partial void OnUserNameChanged();
    partial void OnBookIdChanging(int value);
    partial void OnBookIdChanged();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnAmountChanging(int value);
    partial void OnAmountChanged();
    #endregion
	
	public ShopCart()
	{
		this._Book = default(EntityRef<Book>);
		this._Account = default(EntityRef<Account>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
	public string UserName
	{
		get
		{
			return this._UserName;
		}
		set
		{
			if ((this._UserName != value))
			{
				if (this._Account.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnUserNameChanging(value);
				this.SendPropertyChanging();
				this._UserName = value;
				this.SendPropertyChanged("UserName");
				this.OnUserNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BookId", DbType="Int NOT NULL")]
	public int BookId
	{
		get
		{
			return this._BookId;
		}
		set
		{
			if ((this._BookId != value))
			{
				if (this._Book.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnBookIdChanging(value);
				this.SendPropertyChanging();
				this._BookId = value;
				this.SendPropertyChanged("BookId");
				this.OnBookIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int Id
	{
		get
		{
			return this._Id;
		}
		set
		{
			if ((this._Id != value))
			{
				this.OnIdChanging(value);
				this.SendPropertyChanging();
				this._Id = value;
				this.SendPropertyChanged("Id");
				this.OnIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="Int NOT NULL")]
	public int Amount
	{
		get
		{
			return this._Amount;
		}
		set
		{
			if ((this._Amount != value))
			{
				this.OnAmountChanging(value);
				this.SendPropertyChanging();
				this._Amount = value;
				this.SendPropertyChanged("Amount");
				this.OnAmountChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Book_ShopCart", Storage="_Book", ThisKey="BookId", OtherKey="Id", IsForeignKey=true)]
	public Book Book
	{
		get
		{
			return this._Book.Entity;
		}
		set
		{
			Book previousValue = this._Book.Entity;
			if (((previousValue != value) 
						|| (this._Book.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Book.Entity = null;
					previousValue.ShopCart.Remove(this);
				}
				this._Book.Entity = value;
				if ((value != null))
				{
					value.ShopCart.Add(this);
					this._BookId = value.Id;
				}
				else
				{
					this._BookId = default(int);
				}
				this.SendPropertyChanged("Book");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Account_ShopCart", Storage="_Account", ThisKey="UserName", OtherKey="UserName", IsForeignKey=true)]
	public Account Account
	{
		get
		{
			return this._Account.Entity;
		}
		set
		{
			Account previousValue = this._Account.Entity;
			if (((previousValue != value) 
						|| (this._Account.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Account.Entity = null;
					previousValue.ShopCart.Remove(this);
				}
				this._Account.Entity = value;
				if ((value != null))
				{
					value.ShopCart.Add(this);
					this._UserName = value.UserName;
				}
				else
				{
					this._UserName = default(string);
				}
				this.SendPropertyChanged("Account");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.OrderDetail")]
public partial class OrderDetail : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _OrderId;
	
	private int _BookId;
	
	private int _Amount;
	
	private int _Id;
	
	private EntityRef<Book> _Book;
	
	private EntityRef<Order> _Order;
	
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnOrderIdChanging(int value);
    partial void OnOrderIdChanged();
    partial void OnBookIdChanging(int value);
    partial void OnBookIdChanged();
    partial void OnAmountChanging(int value);
    partial void OnAmountChanged();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    #endregion
	
	public OrderDetail()
	{
		this._Book = default(EntityRef<Book>);
		this._Order = default(EntityRef<Order>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderId", DbType="Int NOT NULL")]
	public int OrderId
	{
		get
		{
			return this._OrderId;
		}
		set
		{
			if ((this._OrderId != value))
			{
				if (this._Order.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnOrderIdChanging(value);
				this.SendPropertyChanging();
				this._OrderId = value;
				this.SendPropertyChanged("OrderId");
				this.OnOrderIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BookId", DbType="Int NOT NULL")]
	public int BookId
	{
		get
		{
			return this._BookId;
		}
		set
		{
			if ((this._BookId != value))
			{
				if (this._Book.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnBookIdChanging(value);
				this.SendPropertyChanging();
				this._BookId = value;
				this.SendPropertyChanged("BookId");
				this.OnBookIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="Int NOT NULL")]
	public int Amount
	{
		get
		{
			return this._Amount;
		}
		set
		{
			if ((this._Amount != value))
			{
				this.OnAmountChanging(value);
				this.SendPropertyChanging();
				this._Amount = value;
				this.SendPropertyChanged("Amount");
				this.OnAmountChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int Id
	{
		get
		{
			return this._Id;
		}
		set
		{
			if ((this._Id != value))
			{
				this.OnIdChanging(value);
				this.SendPropertyChanging();
				this._Id = value;
				this.SendPropertyChanged("Id");
				this.OnIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Book_OrderDetail", Storage="_Book", ThisKey="BookId", OtherKey="Id", IsForeignKey=true)]
	public Book Book
	{
		get
		{
			return this._Book.Entity;
		}
		set
		{
			Book previousValue = this._Book.Entity;
			if (((previousValue != value) 
						|| (this._Book.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Book.Entity = null;
					previousValue.OrderDetail.Remove(this);
				}
				this._Book.Entity = value;
				if ((value != null))
				{
					value.OrderDetail.Add(this);
					this._BookId = value.Id;
				}
				else
				{
					this._BookId = default(int);
				}
				this.SendPropertyChanged("Book");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Order_OrderDetail", Storage="_Order", ThisKey="OrderId", OtherKey="Id", IsForeignKey=true)]
	public Order Order
	{
		get
		{
			return this._Order.Entity;
		}
		set
		{
			Order previousValue = this._Order.Entity;
			if (((previousValue != value) 
						|| (this._Order.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Order.Entity = null;
					previousValue.OrderDetail.Remove(this);
				}
				this._Order.Entity = value;
				if ((value != null))
				{
					value.OrderDetail.Add(this);
					this._OrderId = value.Id;
				}
				else
				{
					this._OrderId = default(int);
				}
				this.SendPropertyChanged("Order");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.[Order]")]
public partial class Order : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private string _UserName;
	
	private System.Nullable<System.DateTime> _Time;
	
	private bool _PayState;
	
	private string _Address;
	
	private bool _DeliverState;
	
	private int _Id;
	
	private bool _GainState;
	
	private string _CurState;
	
	private string _Receiver;
	
	private string _Phone;
	
	private System.Nullable<decimal> _Cost;
	
	private bool _CommentState;
	
	private EntitySet<OrderDetail> _OrderDetail;
	
	private EntityRef<Account> _Account;
	
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserNameChanging(string value);
    partial void OnUserNameChanged();
    partial void OnTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnTimeChanged();
    partial void OnPayStateChanging(bool value);
    partial void OnPayStateChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnDeliverStateChanging(bool value);
    partial void OnDeliverStateChanged();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnGainStateChanging(bool value);
    partial void OnGainStateChanged();
    partial void OnCurStateChanging(string value);
    partial void OnCurStateChanged();
    partial void OnReceiverChanging(string value);
    partial void OnReceiverChanged();
    partial void OnPhoneChanging(string value);
    partial void OnPhoneChanged();
    partial void OnCostChanging(System.Nullable<decimal> value);
    partial void OnCostChanged();
    partial void OnCommentStateChanging(bool value);
    partial void OnCommentStateChanged();
    #endregion
	
	public Order()
	{
		this._OrderDetail = new EntitySet<OrderDetail>(new Action<OrderDetail>(this.attach_OrderDetail), new Action<OrderDetail>(this.detach_OrderDetail));
		this._Account = default(EntityRef<Account>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
	public string UserName
	{
		get
		{
			return this._UserName;
		}
		set
		{
			if ((this._UserName != value))
			{
				if (this._Account.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnUserNameChanging(value);
				this.SendPropertyChanging();
				this._UserName = value;
				this.SendPropertyChanged("UserName");
				this.OnUserNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Time", DbType="DateTime")]
	public System.Nullable<System.DateTime> Time
	{
		get
		{
			return this._Time;
		}
		set
		{
			if ((this._Time != value))
			{
				this.OnTimeChanging(value);
				this.SendPropertyChanging();
				this._Time = value;
				this.SendPropertyChanged("Time");
				this.OnTimeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PayState", DbType="Bit NOT NULL")]
	public bool PayState
	{
		get
		{
			return this._PayState;
		}
		set
		{
			if ((this._PayState != value))
			{
				this.OnPayStateChanging(value);
				this.SendPropertyChanging();
				this._PayState = value;
				this.SendPropertyChanged("PayState");
				this.OnPayStateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="VarChar(50)")]
	public string Address
	{
		get
		{
			return this._Address;
		}
		set
		{
			if ((this._Address != value))
			{
				this.OnAddressChanging(value);
				this.SendPropertyChanging();
				this._Address = value;
				this.SendPropertyChanged("Address");
				this.OnAddressChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeliverState", DbType="Bit NOT NULL")]
	public bool DeliverState
	{
		get
		{
			return this._DeliverState;
		}
		set
		{
			if ((this._DeliverState != value))
			{
				this.OnDeliverStateChanging(value);
				this.SendPropertyChanging();
				this._DeliverState = value;
				this.SendPropertyChanged("DeliverState");
				this.OnDeliverStateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int Id
	{
		get
		{
			return this._Id;
		}
		set
		{
			if ((this._Id != value))
			{
				this.OnIdChanging(value);
				this.SendPropertyChanging();
				this._Id = value;
				this.SendPropertyChanged("Id");
				this.OnIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GainState", DbType="Bit NOT NULL")]
	public bool GainState
	{
		get
		{
			return this._GainState;
		}
		set
		{
			if ((this._GainState != value))
			{
				this.OnGainStateChanging(value);
				this.SendPropertyChanging();
				this._GainState = value;
				this.SendPropertyChanged("GainState");
				this.OnGainStateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CurState", DbType="NVarChar(50)")]
	public string CurState
	{
		get
		{
			return this._CurState;
		}
		set
		{
			if ((this._CurState != value))
			{
				this.OnCurStateChanging(value);
				this.SendPropertyChanging();
				this._CurState = value;
				this.SendPropertyChanged("CurState");
				this.OnCurStateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Receiver", DbType="NVarChar(50)")]
	public string Receiver
	{
		get
		{
			return this._Receiver;
		}
		set
		{
			if ((this._Receiver != value))
			{
				this.OnReceiverChanging(value);
				this.SendPropertyChanging();
				this._Receiver = value;
				this.SendPropertyChanged("Receiver");
				this.OnReceiverChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Phone", DbType="NVarChar(20)")]
	public string Phone
	{
		get
		{
			return this._Phone;
		}
		set
		{
			if ((this._Phone != value))
			{
				this.OnPhoneChanging(value);
				this.SendPropertyChanging();
				this._Phone = value;
				this.SendPropertyChanged("Phone");
				this.OnPhoneChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cost", DbType="Decimal(18,2)")]
	public System.Nullable<decimal> Cost
	{
		get
		{
			return this._Cost;
		}
		set
		{
			if ((this._Cost != value))
			{
				this.OnCostChanging(value);
				this.SendPropertyChanging();
				this._Cost = value;
				this.SendPropertyChanged("Cost");
				this.OnCostChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CommentState", DbType="Bit NOT NULL")]
	public bool CommentState
	{
		get
		{
			return this._CommentState;
		}
		set
		{
			if ((this._CommentState != value))
			{
				this.OnCommentStateChanging(value);
				this.SendPropertyChanging();
				this._CommentState = value;
				this.SendPropertyChanged("CommentState");
				this.OnCommentStateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Order_OrderDetail", Storage="_OrderDetail", ThisKey="Id", OtherKey="OrderId")]
	public EntitySet<OrderDetail> OrderDetail
	{
		get
		{
			return this._OrderDetail;
		}
		set
		{
			this._OrderDetail.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Account_Order", Storage="_Account", ThisKey="UserName", OtherKey="UserName", IsForeignKey=true)]
	public Account Account
	{
		get
		{
			return this._Account.Entity;
		}
		set
		{
			Account previousValue = this._Account.Entity;
			if (((previousValue != value) 
						|| (this._Account.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Account.Entity = null;
					previousValue.Order.Remove(this);
				}
				this._Account.Entity = value;
				if ((value != null))
				{
					value.Order.Add(this);
					this._UserName = value.UserName;
				}
				else
				{
					this._UserName = default(string);
				}
				this.SendPropertyChanged("Account");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_OrderDetail(OrderDetail entity)
	{
		this.SendPropertyChanging();
		entity.Order = this;
	}
	
	private void detach_OrderDetail(OrderDetail entity)
	{
		this.SendPropertyChanging();
		entity.Order = null;
	}
}
#pragma warning restore 1591
